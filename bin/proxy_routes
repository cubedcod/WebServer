#!/bin/sh

#DNS
iptables  -t nat -A OUTPUT -p tcp -d 127.0.0.1 --dport 53 -j REDIRECT --to-ports 1053              # route local inbound port 53 traffic to port 1053 listener
iptables  -t nat -A OUTPUT -p udp -d 127.0.0.1 --dport 53 -j REDIRECT --to-ports 1053
iptables  -t nat -A OUTPUT -p tcp --dport 53 -j REDIRECT --to-ports 1053 -m owner ! --uid-owner $1 # route DNS traffic not originating from proxy uid to DNS proxy
ip6tables -t nat -A OUTPUT -p tcp --dport 53 -j REDIRECT --to-ports 1053 -m owner ! --uid-owner $1
iptables  -t nat -A OUTPUT -p udp --dport 53 -j REDIRECT --to-ports 1053 -m owner ! --uid-owner $1
ip6tables -t nat -A OUTPUT -p udp --dport 53 -j REDIRECT --to-ports 1053 -m owner ! --uid-owner $1

#HTTP
iptables  -t nat -A OUTPUT -p tcp -d 127.0.0.1 --dport 80 -j REDIRECT --to-ports 8000              # route local inbound port 80 traffic to port 8000 listener
iptables  -t nat -A OUTPUT -p tcp --dport 80 -j REDIRECT --to-ports 8000 -m owner ! --uid-owner $1 # route HTTP traffic not originating from proxy uid to HTTP proxy
ip6tables -t nat -A OUTPUT -p tcp --dport 80 -j REDIRECT --to-ports 8000 -m owner ! --uid-owner $1

# HTTPS
iptables  -t nat -A OUTPUT -p tcp -d 127.0.0.1 --dport 443 -j REDIRECT --to-ports 8443             # route local inbound port 443 traffic to port 8443 listener
ip6tables -t nat -A OUTPUT -p tcp -d ::1       --dport 443 -j REDIRECT --to-ports 8443
#iptables  -t nat -A OUTPUT -p tcp --dport 443 -j REDIRECT --to-ports 8443 -m owner ! --uid-owner $1 # route HTTPS traffic not originating from proxy uid to HTTPS proxy
#ip6tables -t nat -A OUTPUT -p tcp --dport 443 -j REDIRECT --to-ports 8443 -m owner ! --uid-owner $1
