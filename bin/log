#!/usr/bin/env ruby
require 'open3'
require_relative '../ruby/index'
if ARGV[0] == 'hosts'
  Open3.popen3("cat log/access.log") do |stdin, stdout, stderr, thread|
    hosts = {}
    while line = stdout.gets do
      t = line.split ' '
      status,method,addr,action,mime = [t[3],t[5],t[6],t[8],t[9]]
      unless !addr || hosts[addr.R.host] || method == 'CONNECT'
        hosts[addr.R.host] = true
        puts "\e[7m" + method + "\e[0m \e[32;1m" + status + " \e[7m" + addr + "\e[0m " + "#{action} #{mime}"
      end
    end
  end
else
  Open3.popen3("tail -f log/access.log") do |stdin, stdout, stderr, thread|
    hosts = {}
    while line = stdout.gets do
      t = line.split ' '
      status,method,addr,action,mime = [t[3],t[5],t[6],t[8],t[9]]

      hidden = (method == 'CONNECT') ||
               (action && (action.match? /FIRSTUP_PARENT/)) # logged by daemon
      unless hidden
        origin = false
        color = case status
                when /304/
                  '30'
                when /(40[03]|500|ABORT|DENIED)/
                  '31'
                when /200/
                  if (action.match? /(ORIGINAL|DIRECT)/) && method != 'CONNECT'
                    origin = true
                    if hosts[addr.R.host]
                      '37'
                    else
                      hosts[addr.R.host] = true
                      '32'
                    end
                  else
                    '37'
                  end
                else
                  '30'
                end
        puts "\e[7m" + method + "\e[0m \e[" +
             color + ";1m" + status + " \e[7m" +
             (origin ? addr : addr.sub(/^https?:\/\//,'')) +
             "\e[0m " + "#{action} #{mime}"
      end
    end
  end
end
